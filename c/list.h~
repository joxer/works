#include <stdio.h>
#include <malloc.h>

struct list {

  int value;

  struct list *next;
  struct list *prev;


};


struct list* add_list(struct list *l, int value){

  struct list *tmp;
  tmp = (struct list *) malloc(sizeof(struct list));
  
  tmp->value = value;
  l->next = tmp;
  tmp->prev = l;
  tmp->next = NULL;
  return tmp;
}


int remove_l(struct list *l){
  
  /*

    rimuove il pezzo della lista e unisce i due pezzi staccati
    
   */
  if(l->prev != NULL && l->next != NULL){
    l->prev->next = l->next;
    l->next->prev = l->prev;
    
    free(l);
    return 0;
    }
  else
    return 1;
  
  
}

int search(struct list *l, int value){
  struct list *i = l;
  do{

    
    if(i->value == value){
      
     
      return 1;
    }
    i = i->next;
  }
  while(i != NULL);
    return 0;
  
}
int cdr(struct list *l){
  struct list *i;
  for(i = l; i->next != 0; i = i->next);
  
  return i->value;
}

int car(struct list *l){

  return l->value;

}

int show_all(struct list *first){
  struct list *i;
  for(i = first; i->next != NULL; i = i->next)
    printf("%d\n", i->value);
  
  return 0;
}
